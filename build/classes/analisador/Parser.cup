package analisador;

import java_cup.runtime.Symbol;

parser code
{:
    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
}
:};

terminal OR, VAZIO, PROGRAM, VAR, INTEGER, REAL, BOOLEAN, PROCEDURE, BEGIN, 
    END, IF, THEN, WHILE, DO, NOT, ID, INTEIROS, REAIS, PONTO, PONTOVIRG,  
    DOISPONTOS, ABREPAR, FECHAPAR, ATRIBUICAO, RELACIONAIS, ADITIVOS, 
    MULTIPLICATIVOS, ELSE, TRUE, FALSE; 
non terminal PROGRAMA, DECLARACOES_VARIAVEIS, LISTA_DECLARACOES_VARIAVEISi,
    COMANDO_COMPOSTO, LISTA_DECLARACOES_VARIAVEIS, TIPO, LISTA_DE_IDENTIFICADORES,  
    LISTA_DE_IDENTIFICADORESi, DECLARACOES_DE_SUBPROGRAMAS, LISTA_DE_PARAMETROS, 
    COMANDOS_OPCIONAIS, LISTA_DE_COMANDOS, DECLARACAO_DE_SUBPROGRAMA,LISTA_DE_COMANDOSi, 
    COMANDO, PARTE_ELSE, VARIAVEL, ATIVACAO_DE_PROCEDIMENTO, ARGUMENTOS, LISTA_DE_EXPRESSOES, 
    LISTA_DE_EXPRESSOESi, EXPRESSAO, EXPRESSAO_SIMPLES, EXPRESSAO_SIMPLESi, TERMO, TERMOi, 
    FATOR, OP_RELACIONAL, OP_ADITIVO, DECLARACOES_DE_SUBPROGRAMASi, OP_MULTIPLICATIVO, 
    LISTA_DE_PARAMETROSi, SINAL;

start with PROGRAMA;

PROGRAMA ::=
 PROGRAM ID PONTOVIRG DECLARACOES_VARIAVEIS DECLARACOES_DE_SUBPROGRAMAS COMANDO_COMPOSTO PONTO 
; 

DECLARACOES_VARIAVEIS ::=
 VAR LISTA_DECLARACOES_VARIAVEIS |
 VAZIO  
; 

LISTA_DECLARACOES_VARIAVEIS ::=
 LISTA_DECLARACOES_VARIAVEISi DOISPONTOS TIPO PONTOVIRG LISTA_DE_IDENTIFICADORES  
; 

LISTA_DECLARACOES_VARIAVEISi ::=
 LISTA_DE_IDENTIFICADORES DOISPONTOS TIPO PONTOVIRG  LISTA_DECLARACOES_VARIAVEISi |
 VAZIO 
; 

LISTA_DE_IDENTIFICADORES ::=
 ID LISTA_DE_IDENTIFICADORESi |
 ID
; 

LISTA_DE_IDENTIFICADORESi ::=
 PONTOVIRG ID LISTA_DE_IDENTIFICADORESi |
 VAZIO 
; 

TIPO ::=
 INTEGER |
 REAL |
 BOOLEAN 
; 

DECLARACOES_DE_SUBPROGRAMAS  ::=
 DECLARACAO_DE_SUBPROGRAMA PONTOVIRG DECLARACOES_DE_SUBPROGRAMASi 
; 

DECLARACOES_DE_SUBPROGRAMASi ::=
 DECLARACAO_DE_SUBPROGRAMA PONTOVIRG DECLARACOES_DE_SUBPROGRAMASi |
 VAZIO 
; 

DECLARACAO_DE_SUBPROGRAMA ::=
 PROCEDURE ID ARGUMENTOS PONTOVIRG DECLARACOES_VARIAVEIS DECLARACOES_DE_SUBPROGRAMAS COMANDO_COMPOSTO  
; 

ARGUMENTOS ::=
 ABREPAR LISTA_DE_PARAMETROS FECHAPAR |
 VAZIO 
; 

LISTA_DE_PARAMETROS ::=
 LISTA_DE_IDENTIFICADORES DOISPONTOS TIPO LISTA_DE_PARAMETROSi 
; 

LISTA_DE_PARAMETROSi ::=
 PONTOVIRG LISTA_DE_IDENTIFICADORES DOISPONTOS TIPO LISTA_DE_PARAMETROSi |
 VAZIO 
; 

COMANDO_COMPOSTO ::=
 BEGIN COMANDOS_OPCIONAIS END  
; 

COMANDOS_OPCIONAIS ::=
 LISTA_DE_COMANDOS |
 VAZIO 
; 

LISTA_DE_COMANDOS ::=
 COMANDO LISTA_DE_COMANDOSi 
; 

LISTA_DE_COMANDOSi ::=
 PONTOVIRG COMANDO LISTA_DE_COMANDOSi |
 VAZIO 
; 

COMANDO ::=
 VARIAVEL ATRIBUICAO EXPRESSAO |
 ATIVACAO_DE_PROCEDIMENTO |
 COMANDO_COMPOSTO |
 IF EXPRESSAO THEN COMANDO PARTE_ELSE |
 WHILE EXPRESSAO DO COMANDO  
; 

PARTE_ELSE ::=
 ELSE COMANDO |
 VAZIO 
; 

VARIAVEL ::=
 ID
; 

ATIVACAO_DE_PROCEDIMENTO ::=
 ID |
 ID ABREPAR LISTA_DE_EXPRESSOES FECHAPAR 
; 

LISTA_DE_EXPRESSOES ::=
 EXPRESSAO LISTA_DE_EXPRESSOESi 
; 

LISTA_DE_EXPRESSOESi ::=
 EXPRESSAO LISTA_DE_EXPRESSOESi |
 VAZIO 
; 

EXPRESSAO ::=
 EXPRESSAO_SIMPLES |
 EXPRESSAO_SIMPLES OP_RELACIONAL EXPRESSAO_SIMPLES  
; 

EXPRESSAO_SIMPLES ::=
 TERMO EXPRESSAO_SIMPLESi |
 SINAL TERMO EXPRESSAO_SIMPLESi 
; 

EXPRESSAO_SIMPLESi ::=
 OP_ADITIVO TERMO EXPRESSAO_SIMPLESi |
 VAZIO 
; 

TERMO ::=
 FATOR TERMOi 
; 

TERMOi ::=
 OP_MULTIPLICATIVO FATOR TERMOi |
 VAZIO 
; 

FATOR ::=
 ID |
 ID ABREPAR LISTA_DE_EXPRESSOES FECHAPAR |
 INTEIROS |
 REAIS |
 TRUE |
 FALSE |
 ABREPAR EXPRESSAO FECHAPAR |
 NOT FATOR 
; 

SINAL ::=
 ADITIVOS 
; 

OP_RELACIONAL ::=
 RELACIONAIS 
; 

OP_ADITIVO ::=
 ADITIVOS |
 OR 
; 

OP_MULTIPLICATIVO ::=
 MULTIPLICATIVOS 
; 